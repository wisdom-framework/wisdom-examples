#
# Wisdom Application Configuration.
#

#
# The global application configuration
#
application {
  # Secret key
  # ~~~~~~~~~~
  # The secret key is used to secure cryptographic functions.
  # If you deploy your application to several instances be sure to use the same key!
  secret = "=[S9LFHYIcGWhb=NuABZ[P2;ABypY@fe[mhhauBjgy=gZo>YLtJA5ncG5`8gr`Q?"
  name = "${project.artifactId}"
  version = "${project.version}"
}

# Web socket configuration
# ~~~~~~~~~~~~~~~~~~~~~~~~
# The following property defines the supported Web socket sub-protocols.
# There are described using a comma-separated list.
# wisdom.websocket.subprotocols =

# Wisdom Monitoring configuration
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
monitor {
  auth {
    enabled = true
    username = admin
    password = admin
  }
  http {
    enabled = true
  }
  jmx {
    enabled = true
  }
  # the update period in second, 10 seconds by default
  # period = 10
}

# Documentation configuration
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~
# This property enables or disables the registration of the documentation on the root url.
documentation.standalone = false

# Session Settings
# ~~~~~~~~~~~~~~~~~~~~~~
# Time until session expires.
application.session.expire_time_in_seconds = 600

# Send session cookie only back when content has changed.
# application.session.send_only_if_changed = "true/false"

# Used to set the Secure flag if the cookie. Means Session will only be
# application.session.transferred_over_https_only = "true/false"

# Used to set the HttpOnly flag at the session cookie. On a supported
# browser, an HttpOnly session cookie will be used only when transmitting
# HTTP (or HTTPS) requests, thus restricting access from other, non-HTTP
# APIs (such as JavaScript). This restriction mitigates but does not
# eliminate the threat of session cookie theft via cross-site scripting
# (XSS).
# application.session.http_only = "true/false"